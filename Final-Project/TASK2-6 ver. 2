// Information for Blynk Device
#define BLYNK_TEMPLATE_ID           "*************"
#define BLYNK_TEMPLATE_NAME         "Quickstart Template"
#define BLYNK_AUTH_TOKEN            "*********************************"
#define BLYNK_PRINT Serial

// Include necessary libraries
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <M5Stack.h>
#include "DHT.h"

// LED pins
int ledPin3 = 3;
int ledPin1 = 1;
int ledPin16 = 16;

// DHT sensor
#define DHTPIN 21
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// WiFi credentials
char ssid[] = "***";
char pass[] = "**********";

// Blynk
BlynkTimer timer;

// Variables to store Blynk button states
int blue_ON;
int green_ON;

// Function to display 'O' on the LCD screen
void OGreen()
{
    M5.Lcd.fillScreen(GREEN);
    M5.Lcd.drawChar('O', 145, 90);
}

// Function to display 'X' on the LCD screen
void XRed()
{
    M5.Lcd.fillScreen(RED);
    M5.Lcd.drawChar('X', 145, 90);
}

// Function to read DHT sensor data and update Blynk virtual pins
void DHT()
{
    float h = dht.readHumidity();
    float c = dht.readTemperature();
    if (isnan(h) || isnan(c))
        Serial.println(F("Failed to read from DHT sensor!"));
    // Update virtual pins V1 and V2 on Blynk
    Blynk.virtualWrite(V1, h);
    Blynk.virtualWrite(V2, c);
}

// Called every time Virtual Pin 6 changes
BLYNK_WRITE(V6)
{
    blue_ON = param.asInt();
    if (blue_ON == 0) digitalWrite(ledPin1, LOW);
    if (blue_ON == 1) digitalWrite(ledPin1, HIGH);
}

// Called every time Virtual Pin 7 changes
BLYNK_WRITE(V7)
{
    green_ON = param.asInt();
    if (green_ON == 0) digitalWrite(ledPin3, LOW);
    if (green_ON == 1) digitalWrite(ledPin3, HIGH);
}

// Function to handle actions when the system is OFF
void when_OFF()
{
    M5.Lcd.clear();
    M5.Lcd.setCursor(0, 0);

    if (M5.BtnA.wasPressed()) Blynk.virtualWrite(V4, "btnA was pressed");
    if (M5.BtnB.wasPressed()) Blynk.virtualWrite(V4, "btnB was pressed");
    if (M5.BtnC.wasPressed()) Blynk.virtualWrite(V4, "btnC was pressed");
}

// Function to handle actions when the system is ON
void when_ON()
{
    digitalWrite(ledPin16, LOW);
    float c = dht.readTemperature();
    if (c <= 30) OGreen();
    if (c > 30) 
    {
        XRed();
        digitalWrite(ledPin16, HIGH);
    }
}

void setup()
{
    // Initialize Blynk
    Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
    Blynk.virtualWrite(V4, "--");

    // Initialize LCD
    M5.Lcd.begin();
    M5.Lcd.setTextSize(10);
    M5.Lcd.setTextColor(WHITE);

    // Initialize LED pins
    pinMode(ledPin3, OUTPUT);
    pinMode(ledPin1, OUTPUT);
    pinMode(ledPin16, OUTPUT);
    digitalWrite(ledPin3, LOW);
    digitalWrite(ledPin1, LOW);
    digitalWrite(ledPin16, LOW);

    // Initialize DHT sensor
    dht.begin();
    timer.setInterval(100L, DHT);
    M5.update();
}

void loop()
{
    // Run Blynk and timer functions
    Blynk.run();
    timer.run();

    // Check if both blue and green buttons are ON
    if ((blue_ON == 1) && (green_ON == 1)) 
    {
        digitalWrite(ledPin3, LOW);
        digitalWrite(ledPin1, LOW);
        when_ON();
    }
    else 
    {
        if ((blue_ON == 0) && (green_ON == 1)) digitalWrite(ledPin3, HIGH);
        if ((blue_ON == 1) && (green_ON == 0)) digitalWrite(ledPin1, HIGH);
        digitalWrite(ledPin16, LOW);
        when_OFF();
    }

    M5.update();
}
